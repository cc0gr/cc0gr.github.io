<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>渗透测试之03基础篇</title>
    <url>/2019/10/13/03-sec/</url>
    <content><![CDATA[<h2 id="渗透测试术语"><a href="#渗透测试术语" class="headerlink" title="渗透测试术语"></a>渗透测试术语</h2><p><font color="#EE4000">SQL</font><br>SQL（Struct Querry Language）<font color="#EE799F">结构化查询语言</font>,是一种数据库查询和程序设计语言，用于存取数据以及查询、更新和管理关系数据库系统，同时也是数据库脚本文件的扩展名</p><p><font color="#EE4000">XSS</font><br>CSS（Cross  Site Script）<font color="#EE799F">跨站脚本攻击</font>，为了和HTML中的CSS（层叠样式）进行区分，在信息安全领域内，我们习惯将跨站脚本攻击成为“XSS”</p><a id="more"></a>

<p><font color="#EE4000">CSRF</font><br>CSRF（Cross-site request forgery）<font color="#EE799F">跨站请求伪造</font>，也是一种漏洞的类型。</p>
<p><font color="#EE4000">SSRF</font><br>SSRF(Server-Side Request Forgery)<font color="#EE799F">服务器请求伪造</font>，是一种由攻击者构造形成由服务端发起请求的一个安全漏洞。一般情况下，SSRF攻击的目标是从外网无法访问的内部系统。（正是因为它是由服务端发起的，所以它能够请求到与它相连而与外网隔离的内部系统。</p>
<p><font color="#EE4000">WAF</font><br>WAF（WebApplicationFirewall）<font color="#EE799F">WEB应用防护系统</font>，也称之为网站应用级入侵防御系统。</p>
<p><font color="#EE4000">Exploit</font><br>Exploit，<font color="#EE799F">漏洞利用代码</font>。时常我们会看到不少的CVE漏洞被公布出来，有些CVE漏洞就会附加一些Exploit的代码程序，只要你将代码以正确的形式针对合适的目标测试那么就会显示出最后的效果。</p>
<p><font color="EE4000">Payload</font><br>Payload即<font color="EE799F">有效载荷</font>，被隐藏并且秘密发送的信息。</p>
<p><font color="EE4000">Webshell</font><br> WebShell，顾名思义，“web”的含义是显然需要服务器开放WEB服务，“shell”的含义是取得对服务器某种程度上操作权限。黑客在入侵了一个网站后，通常会将这些asp或php后门文件与网站服务器WEB目录下正常的网页文件混在一起，然后就可以使用浏览器来访问这些asp或者php后门，得到一个命令执行环境，以达到控制网站服务器的目的（可以上传下载文件，查看数据库，执行任意程序命令等）。由于webshell其大多是以asp、php、jsp或者cgi等网页文件形式存在的一种命令执行环境，也可以将其称做为一种网页后门。</p>
<p> <font color="EE4000">木马</font><br> 木马是病毒的一种,分为<font color="EE799F">软件木马</font>和<font color="EE799F">脚本木马</font>，软件木马就是一个恶意控制的软件，脚本木马就是脚本语言编写的木马程序。</p>
<p> <font color="EE4000">poc</font><br> Prood of concept,即<font color="EE799F">漏洞验证程序</font></p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>webSec</tag>
      </tags>
  </entry>
  <entry>
    <title>渗透测试之02基础篇</title>
    <url>/2019/10/13/02-sec/</url>
    <content><![CDATA[<h2 id="信息系统安全的定义"><a href="#信息系统安全的定义" class="headerlink" title="信息系统安全的定义"></a>信息系统安全的定义</h2><p>a&gt;<font color="#FF4040"> 机密性(Confidentiality)</font>:对信息或资源的隐藏，信息不被非授权人员所获取，本质上就是不被”非授权人员”读取，也就是<font color="#FF4040">控制”r”权限</font></p><p>b&gt;<font color="#FF4040"> 完整性 （Integrity)</font>：对数据或资源的可信赖程度，通常用于表述防止不当或未经授权的修改，也就是<font color="#FF4040">控制”w”权限</font>,主要是为了阻止未经授权的改写数据企图         </p><a id="more"></a>

<p>c&gt;<font color="#FF4040">可用性 (Availability)</font>：使用所期望的信息或资源的能力,例如DOS攻击就是通过破坏系统的可用性来达到攻击的目的</p>
<p>d&gt;<font color="#FF4040">可追溯性(Traceability)</font>：系统须保证对数据的访问和系统能力的使用的个人行为的可追溯性，并且提供审计这些行为的方法,主要涉及三个要素：标识、鉴别、审计</p>
<p><strong>安全评估过程的构成</strong><br>一个安全评估的过程，可以简单的分为4个阶段：<strong>资产等级划分</strong>、<strong>威胁分析</strong>、<strong>风险分析</strong>、<strong>确认解决方案</strong>。</p>
<h3 id="资产等级划分"><a href="#资产等级划分" class="headerlink" title="资产等级划分"></a>资产等级划分</h3><p><strong>资产等级划分</strong>：是进行所有工作的基础，这项工作能够帮助我们明确目标是什么，要保护什么。<br><font color="red">互联网安全的核心问题是数据安全的问题</font>。</p>
<p>&nbsp;&nbsp;资产等级划分的过程需要和各个业务部门的负责人一一沟通，<strong>了解公司最重要的资产是什么</strong>，他们最<strong>看重的数据是什么</strong>。通过访谈的形式，安全部门才能熟悉、了解公司的业务，公司所拥有的数据，以及不同数据的重要程度，为后续的安全评估过程指明方向。</p>
<p> &nsp;&nbsp;在完成资产等级划分之后，需要<font color="#EE9572">划分信任域</font>和<font color="#EE9572">信任边界</font>。通常我们用一种最简单的划分方式就是从网络逻辑上来划分。比如最重要的数据放在数据库里面。那么把数据库的服务器圈起来；WEB应用可以从数据库中读取数据并对外提供服务，那再把WEB服务器圈起来，最外面的是不可信任的</p>
<h4 id="威胁分析"><a href="#威胁分析" class="headerlink" title="威胁分析"></a>威胁分析</h4><p>&nbsp;&nbsp; 在安全领域里，我们把可能造成危害的来源称为“<font color="#EEA2AD">威胁（Threat）</font>”，而把可能会出现的所示称为<font color="#EEA2AD">风险（Risk）</font>。风险一定是和损失联系在一起的。</p>
<p>&nbsp;&nbsp;所谓的威胁分析就是<font color="#EEA2AD">将所有的威胁都找出来</font>。一般采用头脑风暴的方法。当然也有一些比较科学的方法，比如使用一个模型帮助我们去思考去分析。</p>
<p> 在做威胁分析时，要尽可能的不遗漏威胁，头脑风暴的过程可以确定攻击面（AttackSurface）。</p>
<h3 id="风险分析"><a href="#风险分析" class="headerlink" title="风险分析"></a>风险分析</h3><p><strong>风险由以下因素组成</strong>：<br><font color="red"> Risk=Probability*Damage Potential</font></p>
<p><strong>影响风险高低的因素除了造成损失的大小之外还有考虑到发生的可能性。</strong></p>
<p>&nbsp;&nbsp;现今也有不少的风险分析模型比如微软提出的DREAD模型。但是在任何时候都应该记住——模型是死的，人是活的，再好的模型也是需要人来使用的，在确定攻击方面，以及判断风险高低时，都需要一定的经验，这也是安全工程师的价值所在。</p>
<h3 id="确认解决方案"><a href="#确认解决方案" class="headerlink" title="确认解决方案"></a>确认解决方案</h3><p>&nbsp;&nbsp;安全评估的产出物，就是安全解决方案。解决方案一定要有针对性，这种针对性是由资产等级划分、威胁分析、风险分析等阶段的结果给出的。</p>
<p>&nbsp;&nbsp;设计安全方案不难，难的是如何设计一个好的解决方案。设计一个好的解决方案，是真正考验安全工程师水平的时候。</p>
<p>&nbsp;&nbsp;作为安全工程师，要想的就是如何通过简单而有效的方案，解决遇到的安全问题。安全方案能够有效的抵抗威胁，但同时不能过多干涉正常的业务流程，在性能上也不能拖后腿。</p>
<p><font color="#EEA2AD">好的安全方案对用户应该是透明的，尽可能地不要改变用户的使用习惯。</font></p>
<p>&nbsp;&nbsp;好的安全产品或模块除了要兼顾用户体验外，还要易于持续改进。一个好的安全模块，同时也应该是一个优秀的程序，从设计上也需要做到高聚合，地耦合、易于扩展。</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>webSec</tag>
      </tags>
  </entry>
  <entry>
    <title>渗透测试之01基础篇</title>
    <url>/2019/10/13/01-sec/</url>
    <content><![CDATA[<h2 id="渗透测试的定义："><a href="#渗透测试的定义：" class="headerlink" title="渗透测试的定义："></a>渗透测试的定义：</h2><p>渗透测试是受信任的第三方通过模拟黑客可能使用的攻击手段对目标系统的安全性作出风险评估并针对目标系统所存在的风险给出安全修复建议的一个测试过程。</p><p>注意：开展渗透测试前，一定要获取目标主机的官方有效授权，注意规避法律风险</p><p>意义：<br>通过渗透测试，可以使系统管理人员、系统开发人员及时了解到系统潜在的“安全危机”（薄弱点），并及时进行修复，加强系统的安全性，避免不必要的损失。</p><a id="more"></a>


<h2 id="渗透测试的分类："><a href="#渗透测试的分类：" class="headerlink" title="渗透测试的分类："></a>渗透测试的分类：</h2><p><strong>（1）黑盒测试</strong><br>定义：渗透测试人员除了知道被测试的目标之外，其余于目标相关的信息一无所知<br>特点：这种类型的渗透测试属于外部渗透测试。在前期需要对目标进行大量的信息收集，耗时较长。但是这种类型的渗透测试更有利于挖掘出系统潜在的漏洞、以及脆弱环节、薄弱点等。</p>
<p><strong>（2）白盒测试</strong><br>定义：渗透测试人员可以通过正常渠道向被测试单位取得各种资料，包括网络拓扑结构图、员工资料甚至网站程序的代码片段，也可以和单位其他员工进行面对面沟通。<br>特点：这种类型的渗透测试在前期已经对目标系统有了一个初步的了解。这类测试的地点可以分为“从组织内部”与“从组织外部”两种大环境。在这种测试下可以充分发挥<strong>“社会工程学的力量”</strong>，对企业内部雇员的越权操作进行测试。</p>
<p><strong>（3）灰盒测试</strong><br>定义：灰盒测试介于白盒测试与黑盒测试之间。<br>特点：属于较为隐秘的测试。在测试当中，被测试单位只有少数人知晓测试的存在，因此能够较好的检验单位中的信息安全事件监控、响应等是否到位。</p>
<h2 id="渗透测试按照测试目标可以分为四类："><a href="#渗透测试按照测试目标可以分为四类：" class="headerlink" title="渗透测试按照测试目标可以分为四类："></a>渗透测试按照测试目标可以分为四类：</h2><p><strong>（1）操作系统渗透</strong><br>Windows、Linux、Solaris、AIX、SCO等</p>
<p><strong>（2）数据库系统渗透</strong><br>MySQL 、Oracle、MSSQL、sybase、informix</p>
<p><strong>（3）应用系统渗透</strong><br>由ASP、JSP、PHP等组成的web应用（包括移动应用产品）</p>
<p><strong>（4）网络设备渗透</strong><br>防火墙、入侵检测系统等</p>
<h2 id="渗透测试流程："><a href="#渗透测试流程：" class="headerlink" title="渗透测试流程："></a>渗透测试流程：</h2><p><strong>（1）渗透测试目标以及界限的明确</strong><br>在进行渗透测试之前，需要与客户就渗透测试的目标、渗透测试的范围、渗透测试方式（黑盒、白盒、灰盒以及是否涉及社会工程学）进行商讨，达成一致协议，这一点至关重要。</p>
<p><strong>（2）信息收集</strong><br>在（1）的基础之上，收集与将要进行渗透测试的目标相关的信息，在此过程中可以使用WEB扫描工具以及第三方信息收集工具、搜素引擎（Google）等。<br><font color="red">A： 基础信息获取</font><br>DNS域名信息<br>注册人信息（注册人姓名，电话、邮箱等）<br>网站或程序开发所涉及到的语言(php、jsp、ASP、Ajax、Html、xml等)<br>网站使用的服务器，数据库等信息</p>
<p><font color="red"> B：WEB扫描信息获取</font><br>开发端口与服务识别<br>服务器操作系统类型<br>目标网络结构…等等</p>
<p><strong>（3）威胁建模</strong><br>根据（2）中收集到的信息，对测试目标进行威胁建模，查找与渗透测试目标所开启的服务、开放的端口、使用的服务器、域名、编程逻辑、编程语言等等信息中存在的可利用漏洞信息，并且制定渗透测试方案。</p>
<p><strong>（4）前期渗透测试</strong><br>根据（3）中制定的渗透测试方案开始渗透测试<strong>（注意前期商议的渗透测试界线范围）</strong></p>
<p><strong>（5）后渗透测试</strong><br>后渗透测试主要是在前期渗透测试的基础上扩大影响范围、提高权限、建立维持访问、清理痕迹等。后渗透测试在整个渗透测试中相当重要。</p>
<p><strong>（6）渗透测试报告书写</strong><br>在这个过程中，需要将系统中所存在的漏洞、漏洞的证明、系统潜在的安全威胁、针对安全威胁给出的修复建议等给出纤细的说明。</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>webSec</tag>
      </tags>
  </entry>
</search>
